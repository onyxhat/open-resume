name: Build Docker Image

on:
  push:
    branches:
      - main

  pull_request:

env:
  IS_RELEASE: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Docker Setup
        uses: docker/setup-buildx-action@v2.2.1

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile -t ${CI_SHA} .

      - name: Auto SemVer
        if: ${{ env.IS_RELEASE == 'true' }}
        id: get-ver
        uses: fregante/daily-version-action@v2.1.1

      - name: Create Release
        if: steps.get-ver.outputs.created
        uses: ncipollo/release-action@v1.11.1
        with:
          name: ${{ env.CI_REPOSITORY_NAME_SLUG }}-${{ steps.get-ver.outputs.version }}
          commit: ${{ github.sha }}
          tag: ${{ steps.get-ver.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          prerelease: false

      - name: Publish Docker Image
        if: steps.get-ver.outputs.created
        run: |
          docker tag ${CI_SHA} ${REGISTRY}/${CI_REPOSITORY_OWNER_SLUG}/${CI_REPOSITORY_NAME_SLUG}:${VERSION/v/}
          docker tag ${CI_SHA} ${REGISTRY}/${CI_REPOSITORY_OWNER_SLUG}/${CI_REPOSITORY_NAME_SLUG}:latest

          docker push ${REGISTRY}/${CI_REPOSITORY_OWNER_SLUG}/${CI_REPOSITORY_NAME_SLUG}:${VERSION/v/}
          docker push ${REGISTRY}/${CI_REPOSITORY_OWNER_SLUG}/${CI_REPOSITORY_NAME_SLUG}:latest
        env:
          VERSION: ${{ steps.get-ver.outputs.version }}